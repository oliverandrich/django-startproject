[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
django = { version = ">=5.1,<5.2", extras = ["argon2"] }
django-browser-reload = "^1.15.0"
django-htmx = "^1.19.0"
pytz = "^2024.1"
whitenoise = { extras = ["brotli"], version = "^6.7.0" }
django-tailwind-cli = { extras = ["django-extensions"], version = "^2.14.0" }
gunicorn = "^23.0.0"
environs = { extras = ["django"], version = "^11.0.0" }
heroicons = "^2.8.0"
django-typer = { extras = ["rich"], version = "^2.2.2" }
django-allauth = "^64.2.0"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"
model-bakery = "^1.19.5"
django-test-plus = "^2.2.4"
django-types = "^0.19.1"
types-pytz = "^2024.1.0.20240417"
pre-commit = "^3.8.0"
coverage = { extras = ["toml"], version = "^7.6.1" }
django-rich = "^1.11.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py312"]
line-length = 100
skip-string-normalization = true

[tool.pyright]
venvPath = "."
venv = ".venv"
typeCheckingMode = "basic"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "{{ project_name }}.settings"
python_files = ["test_*.py", "*_test.py", "tests.py"]

[tool.coverage.run]
source = ["."]
branch = true

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py312"
line-length = 100

# Allow unused variables when underscore-prefixed
[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
select = [
  "A",   # flake8-builtins
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "DJ",  # flake8-django
  "E",   # pycodestyle
  "F",   # pyflakes
  "FBT", # flake8-boolean-trap
  "N",   # pep8-naming
  "Q",   # flake8-quotes
  "TID", # flake8-tidy-imports
  "W",   # pycodestyle
  "YTT", # flake8-2020
]

ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore complexity
  "C901",
]

unfixable = [
  # Don't touch unused imports
  "F401",
  # Don't touch unused variables
  "F841",
]

# Exclude a variety of commonly ignored directories
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".github",
  ".hg",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "**pypackages**",
  "_build",
  "build",
  "dist",
  "migrations",
  "node_modules",
  "static",
]

[tool.ruff.lint.isort]
known-first-party = ["{{ project_name }}"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["TID252"]
"tests.py" = ["TID252"]
